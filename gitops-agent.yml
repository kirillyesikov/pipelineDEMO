---
# Source: gitops-helm/templates/gitops-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: gitops-agent
  namespace: "argocd"
  labels:
    helm.sh/chart: gitops-helm-1.1.10
    app.kubernetes.io/name: harness-gitops-agent
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.80.0"
---
# Source: gitops-helm/templates/upgrader/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitops-agent-upgrader
  namespace: "argocd"
  labels:
    helm.sh/chart: gitops-helm-1.1.10
    app.kubernetes.io/name: harness-gitops-agent-upgrader
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent-upgrader
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.80.0"
---
# Source: gitops-helm/templates/gitops-agent/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    helm.sh/chart: gitops-helm-1.1.10
    app.kubernetes.io/name: harness-agent-secret
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.80.0"
  name: gitops-agent
  namespace: argocd
type: Opaque
stringData:
  GITOPS_AGENT_TOKEN: |
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFdmdJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLZ3dnZ1NrQWdFQUFvSUJBUURmbDRvUU8vNEF0L2g3CnplK3VYeE1kbElYL1ZKUWIxcFpJRkdoUmlFNnZtelNhZStETk51TDYvYk56MDhPS3FGU01WaEJZNGhIRDR3V0gKaTRic3hSV1ljR1NIMTJCOTNkWFUydytuYzI1VlgxTTlYdjBGRlVsL0YxNWsrTTI4WStmcEVUTTFldlZDYmIvbQo3UDFINi83dDlMcGdhdVp1Ti9hQngyZmNmWDBTYVM5cnpVTm9kS2I0TkNhZnA1cnFMVFhYVkFlZ0M1azhtcHQxCkluUFBwa1M3cXIxT2p1S3VIYmxrZ3pXTzk4R2syOTUzOXFQbmlncmNyZWg2T3gzaEpWY1kvcXFSOVVkNy9tMTcKREtiR2RUNzRsU29HTCsvdWM2QzBxdlQ3UnRoZFg3VlU2QlJsWFovL3FBL1Blbkx2TUU3YW5CR1FXK3ZBL0hsZgpNSVozZm9HTkFnTUJBQUVDZ2dFQUNPVHZVZ3dBNDZodDB3YnpKTjJWVmhUbGE2M0Nvb1RidjR4SVJnNEZDMGxDClEyN3dGMW02bDc5bDF4S3ljWjZXbG1xS0JlOGdROG1SRzc0NkpNc0dPK1VrcXA2dnNQSVZJbjJBVnVucGxxM1AKRXQ3bmM3OVFDQ1UyMVE5c3A3VFZzZGpFVDdsUGJsQU5WVE5TTS8wNFMrRHpWUWlMbUJEVDFuL0hLdWMzQlhkawpwV3p6ZUVpdVpLaVJrOVJRVkcvaWxxclNqS0xzMFdoNWM2ZjdZZEVRQmQ2SlJleXozdXFPWkNRZEFIUFEzR3RvClZZOGY2ZVNIc0JLR1NxZ0lNVW9BMU4vU3JVL09hcUROVXVTMEozVXZPVFFJeEZXUzVzeWhNbGwvRjMveTFJdTMKTUhiQlNheTVId2Y5OWxJb0VoSGVzcDI5dzJPNHlTQ0g5MW91UGhraEJRS0JnUURsYWc3dXQwRjdNcHFCYnZtZQorYVBaaVp2bVgydVUvWVIrWGlHUEdTS2oyYmtYSzBHb3UvTXJVTWE3WGR2R3p1M2MrYWxuWU1tWUpOVHAwMEUxCkVqdFpRaUYvUklTcTVVUjMyWDJJUmJlak51S3d3aG5pbjVaWU95emFxLyt2Q0pXS2lhRlJBV3h3K2JENk9PdzIKcTFqTEplVjJCUi95cE1oMjhIZHpMRjhRcHdLQmdRRDVnTUNBWGVueWxuZ2pDakp2dlE5bHJTQmszWDllMllXVQp4NFQyLzFVeWF0L0RXdnRabWxZR3NXUXZIUmhRMVZCc2J2QVpYcjN2cWZzaHNOekNldGFKWTdaczRvM05pK2M3CnJQSjljWlhGalBDaXEwSUZhbWZXOWZCRFFoMlhkYnI0L1k4UGpKZzhzbU5sZldmTlI2MXBKUnNmelhnL3VwQm4KWkFGS1Fhak9xd0tCZ0RycEVpNlFsbHNKY28xOEx0TjQ3VzlHRytkN1owZmFGZlRSUFRMZTFIdFl4R1BEc3RlZQpjK0lTbXdXd0kyaVk2SkhPOW9aYVgwb1hZeWtzRzFtQ2RnVUVxMDlnQytWS2ZGdCtXUEx1WENxb1JHdjVXK1pLCjdyTjNkcHdzZ0xxMHJKbm5uNm9LZ0lzK1F3anVKeElleSsxV3JPYXlpREtweCtScStYRjAybkNQQW9HQkFMcksKRVZRSSt5U0tVZGFwdzZpenVkczlDWXQ1NStseW4vY0tpQmtDZng0SHRRM2tCMWpGbXJIWURGRFpUMkwwMEFqZAo1UktaUTBreDBMa2dWNldob1F1cWd1QnhuQWZPUFljSHEyTU9yam4va2dlMmZ1N2ZBbTZFSVNPNVU3NFlmYW42CjZpZVI4a2MrcGZ0TkwzRVh3Rk4vWEJjckZHTmhvTXBHckZDVFozV1JBb0dCQUxKSFlUTGVaanh4YUo0TDN5SjgKbmdPZkM5Y0NaaGNzL2dFUWJTd3RMOUMzTGZwRWRWMCt5dUl2N250RUlrUG11dkt0S1hWWXpJSTM5MDZ1ZmVrRwo5Z0V2a0t0MjA4QTA5Q0djeWFiaitSNHFGZ0VQczBEWGRHN2p6NnkrQWdRek5zZUVmb3V5ZUtuTmNVSk1TdHZtCkEvVjlrSmQwSUgwNmcrbkZQbGR3UWg3bQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: gitops-helm/templates/gitops-agent/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    helm.sh/chart: gitops-helm-1.1.10
    app.kubernetes.io/name: harness-agent-ssh
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.80.0"
  name: gitops-agent-mtls
  namespace: argocd
type: Opaque
data:
  client.crt: |
    
  client.key: |
---
# Source: gitops-helm/templates/gitops-agent/configmap.yaml
apiVersion: v1
data:
  GITOPS_ACCOUNT_IDENTIFIER: n7brygS2SSSMAkd8ntpoYA
  GITOPS_AGENT_IDENTIFIER: gitopsagent
  GITOPS_ORG_IDENTIFIER: 
  GITOPS_PROJECT_IDENTIFIER: 
  GITOPS_SERVICE_HTTP_TLS_ENABLED: "false"
  GITOPS_SERVICE_HTTP_CERT_FILES: /tmp/ca.bundle
  GITOPS_SERVICE_MTLS_ENABLED: "false"
  GITOPS_SERVICE_HTTP_CLIENT_CERT: /etc/mtls/client.crt
  GITOPS_SERVICE_HTTP_CLIENT_KEY: /etc/mtls/client.key
  AGENT_HTTP_TARGET: https://app.harness.io/gitops
  GITOPS_SERVICE_PROTOCOL: HTTP1
  GITOPS_AGENT_ENABLE_RECONCILE: "true"
  GITOPS_AGENT_RECONCILE_INTERVAL: "100"
  GITOPS_AGENT_DISCOVER_APPLICATION_PODS_DURATION_IN_SECS: "120"
  LOG_LEVEL: debug
  GITOPS_AGENT_FETCH_TYPE: "POLLER"
  GITOPS_ARGOCD_REPO: argocd-repo-server
  GITOPS_ARGOCD_REDIS: argocd-redis
  GITOPS_ARGOCD_REDIS_HA: redis-ha
  GITOPS_ARGOCD_REDIS_HA_PROXY: redis-ha-haproxy
  GITOPS_ARGOCD_APP_CONTROLLER: argocd-application-controller
  GITOPS_ARGOCD_APPSET_CONTROLLER: argocd-applicationset-controller
  GITOPS_AGENT_AVAILABILITY_MODE: NON-HA
  ARGOCD_SERVER_REPO_SERVER: argocd-repo-server:8081
  REDIS_SERVER: argocd-redis:6379
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: gitops-helm-1.1.10
    app.kubernetes.io/name: harness-gitops-agent-cm
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.80.0"
  name: gitops-agent
  namespace: argocd
---
# Source: gitops-helm/templates/upgrader/harness-upgrader-cm.yaml
apiVersion: v1
data:
  UPGRADER_GITOPS_ACCOUNT_IDENTIFIER: n7brygS2SSSMAkd8ntpoYA
  UPGRADER_GITOPS_AGENT_IDENTIFIER: gitopsagent
  UPGRADER_GITOPS_ORG_IDENTIFIER: 
  UPGRADER_GITOPS_PROJECT_IDENTIFIER: 
  UPGRADER_MODE: GitopsAgent
  UPGRADER_NAMESPACE: argocd
  UPGRADER_WORKLOAD_NAME: gitops-agent
  UPGRADER_CONTAINER_NAME: gitops-agent
  UPGRADER_GITOPS_AGENT_HTTP_TARGET: https://app.harness.io/prod1/gitops
  UPGRADER_GITOPS_USE_V2: "true"
  UPGRADER_GITOPS_ALL: "false"
kind: ConfigMap
metadata:
  name: gitops-agent-upgrader
  namespace: "argocd"
---
# Source: gitops-helm/templates/gitops-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gitops-agent
  namespace: "argocd"
  labels:
    helm.sh/chart: gitops-helm-1.1.10
    app.kubernetes.io/name: harness-gitops-agent
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.80.0"
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - external-secrets.io
  resources:
    - externalsecrets
  verbs:
    - get
    - list
    - watch
    - update
    - patch
    - delete
    - create
- apiGroups:
    - generators.external-secrets.io
  resources:
    - gcraccesstokens
    - ecrauthorizationtokens
  verbs:
    - get
    - list
    - watch
    - update
    - patch
    - delete
    - create
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - appprojects
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - events
  - pods
  verbs:
  - create
  - list
  - watch
  - get
- apiGroups:
    - apps
  resources:
    - deployments
  verbs:
    - update
    - patch
---
# Source: gitops-helm/templates/upgrader/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gitops-agent-upgrader
  namespace: "argocd"
  labels:
    helm.sh/chart: gitops-helm-1.1.10
    app.kubernetes.io/name: harness-gitops-agent-upgrader
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent-upgrader
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.80.0"
rules:
  - apiGroups:
    - batch
    - apps
    - extensions
    resources:
    - cronjobs
    verbs:
    - get
    - list
    - watch
    - update
    - patch
  - apiGroups:
    - extensions
    - apps
    resources:
    - deployments
    - statefulsets
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
---
# Source: gitops-helm/templates/gitops-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitops-agent
  namespace: "argocd"
  labels:
    helm.sh/chart: gitops-helm-1.1.10
    app.kubernetes.io/name: harness-gitops-agent
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.80.0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitops-agent
subjects:
- kind: ServiceAccount
  name: gitops-agent
  namespace: argocd
---
# Source: gitops-helm/templates/upgrader/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gitops-agent-upgrader
  namespace: "argocd"
  labels:
    helm.sh/chart: gitops-helm-1.1.10
    app.kubernetes.io/name: harness-gitops-agent-upgrader
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent-upgrader
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.80.0"
roleRef:
  kind: Role
  name: gitops-agent-upgrader
  apiGroup: ""
subjects:
  - kind: ServiceAccount
    name: gitops-agent-upgrader
    namespace: "argocd"
---
# Source: gitops-helm/templates/gitops-agent/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitops-agent
  namespace: "argocd"
  labels:
    helm.sh/chart: gitops-helm-1.1.10
    app.kubernetes.io/name: harness-gitops-agent
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.80.0"
spec:
  replicas: 1
  revisionHistoryLimit: 
  selector:
    matchLabels:
      app.kubernetes.io/name: harness-gitops-agent
      app.kubernetes.io/instance: argocd
  template:
    metadata:
      annotations:
      labels:
        helm.sh/chart: gitops-helm-1.1.10
        app.kubernetes.io/name: harness-gitops-agent
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/component: gitops-agent
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: harness-gitops
        app.kubernetes.io/version: "v0.80.0"
    spec:
      terminationGracePeriodSeconds: 30
      serviceAccountName: gitops-agent
      containers:
      - command:
          - /app/agent
        name: gitops-agent
        image: docker.io/harness/gitops-agent:v0.80.0
        imagePullPolicy: Always
        envFrom:
          - configMapRef:
              name: gitops-agent
          - secretRef:
              name: gitops-agent
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: REDIS_USERNAME
            valueFrom:
              secretKeyRef:
                name: argocd-redis
                key: redis-username
                optional: true
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: argocd-redis
                optional: true
                key: auth
          - name: REDIS_SENTINEL_USERNAME
            valueFrom:
              secretKeyRef:
                name: redis-sentinel-username
                key: redis-sentinel-username
                optional: true
          - name: REDIS_SENTINEL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: redis-sentinel-password
                key: redis-sentinel-password
                optional: true
        volumeMounts:
        - mountPath: /app/config/ssh
          name: ssh-known-hosts
        - mountPath: /app/config/tls
          name: tls-certs
        - mountPath: /app/config/server/tls
          name: argocd-repo-server-tls
        - mountPath: /home/argocd
          name: plugins-home
        - mountPath: /tmp
          name: tmp
        - mountPath: /etc/mtls
          name: mtls-certs
        - mountPath: /app/logs
          name: log-volume
        startupProbe:
          exec:
            command:
              - test
              - -s
              - logs/agent.log
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 32
        livenessProbe:
          httpGet:
            path: /healthz?full=true
            port: 8090
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8090
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: "1"
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      volumes:
      - name: plugins-home
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: ssh-known-hosts
        configMap:
          name: argocd-ssh-known-hosts-cm
          defaultMode: 420
      - name: tls-certs
        configMap:
          name: argocd-tls-certs-cm
          defaultMode: 420
      - name: argocd-repo-server-tls
        secret:
          secretName: argocd-repo-server-tls
          optional: true
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
          - key: ca.crt
            path: ca.crt
      - name: mtls-certs
        secret:
          secretName: gitops-agent-mtls
          optional: true
          items:
          - key: client.crt
            path: client.crt
          - key: client.key
            path: client.key
      
      - name: log-volume
        emptyDir: { }
      dnsPolicy: ClusterFirst
---
# Source: gitops-helm/templates/upgrader/cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: gitops-agent-upgrader
  namespace: "argocd"
  labels:
    helm.sh/chart: gitops-helm-1.1.10
    app.kubernetes.io/name: harness-gitops-agent-upgrader
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent-upgrader
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.80.0"
spec:
  schedule: "0 */4 * * *"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 20
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: gitops-agent-upgrader
          containers:
            - name: upgrader
              image: docker.io/harness/upgrader:latest
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: gitops-agent-upgrader
              env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: UPGRADER_TOKEN
                  valueFrom:
                    secretKeyRef:
                      key: GITOPS_AGENT_TOKEN
                      name: gitops-agent
              volumeMounts:
                - name: mtls-certs
                  mountPath: /etc/mtls
                - name: config-volume
                  mountPath: /etc/config
          volumes:
            - name: config-volume
              configMap:
                name: gitops-agent-upgrader
            - name: mtls-certs
              secret:
                secretName: gitops-agent-mtls
                optional: true
                items:
                  - key: client.crt
                    path: client.crt
                  - key: client.key
                    path: client.key
          restartPolicy: Never
